# Configuration for controlling the behavior of the atmos runtime
atmos:

  # Sources for atmos templates
  # To circumvent the version lock and get the latest git master recipes, use the git
  # location, e.g.:
  # location: https://github.com/simplygenius/atmos-recipes.git
  #
  template_sources:
  - name: atmos-recipes
    location: https://github.com/simplygenius/atmos-recipes/archive/v#{atmos_version}.zip#atmos-recipes-#{atmos_version}
  #- name: atmos-pro-recipes
  #  location: https://YOUR_API_KEY@releases.simplygenius.com/recipes/v#{atmos_version}#atmos-pro-recipes-#{atmos_version}

  # To get the atmos-pro gem, add the gem source like:
  #   gem sources -a https://YOUR_API_KEY@releases.simplygenius.com/gems/
  # then install the gem:
  #   gem install simplygenius-atmos-pro
  # then add simplygenius-atmos-pro to the plugins key below
  #
  # The list of plugin gems to load when running atmos
  #
  plugins:
    #   - simplygenius-atmos-pro

  # Allows one to add a custom ruby load path list for extending atmos without
  # having to publish a gem
  load_path:

  # Configure the mechanism that allows terraform to callback into atmos
  ipc:
    # Disables all IPC callbacks into atmos from terraform
    disable: false
    # Configures the notify IP callback
    notify:
      # Disable notify callbacks
      disable: false

  # Configure the integrated otp mechanism
  otp:
    # The file where otp secrets are stored
    secret_file: ~/.atmos.yml

  # Configure the template generator
  generate:
    # The file storing the record of each generated template
    state_file: .atmos-templates.yml

  # Configure the UI components
  ui:
    # Configures UI notifications
    notify:
      # Disable notifications
      disable: false
      # Force notifications to never be modal
      disable_modal: false
      # Set a custom command for notifications, embedded {{title|message|modal}}
      # will be replaced with the value passed from terraform
      command:
      # Force notifications inline in atmos' stdout output rather than launching
      # a GUI notification
      force_inline: false

  # Configure terraform execution details
  terraform:
    # Disable module fetch from convenience plan/apply commands
    disable_auto_modules: false
    # By default (value=false), `atmos init` will update the terraform user
    # plugin directory (~/.terraform.d/plugins) with the plugins for the current
    # env/group so that they can be reused across all env/group combinations.
    # Otherwise, disabling this functionality (value=true) means that each
    # env/group combination will be independent and download all plugins for
    # itself only
    disable_shared_plugins: false
